services:
  api-gateway:
    build:
      context: .
      dockerfile: ./ApiGateway/Dockerfile
    ports:
      - ${API_GATEWAY_PORT}:80
    environment:
      - ASPNETCORE_ENVIRONMENT=${API_GATEWAY_STAGE}
      - ASPNETCORE_URLS=${API_GATEWAY_URLS}
      depends_on:
        - users-api
    
    users-api:
      container_name: users-api
      build:
        context: .
        dockerfile: ./Services/Users/Dockerfile
      ports:
        - ${USER_SERVICE_PORT}:80
      environment:
        - ASPNETCORE_ENVIRONMENT=${USER_SERVICE_STAGE}
        - ASPNETCORE_URLS=http:${USER_SERVICE_URLS}
      depends_on:
        - users-db
  
  users-db:
    image: mongo:8.0.14-noble
    container_name: users-db
    restart: always
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}

  rabbitmq:
    container_name: rabbitmq
    image: ${RABBITMQ_IMAGE}
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  mongo_data:
  rabbitmq_data: